stages:
    - build     # сборка установщика в докер-контейнере и созранение его в артефактах.
    - install   # установка на серверах, используя сохраненный артефакт
    - test      # запуск автотестов на 190 сервере
    - deploy    # сохранение собранного установщика на некстклауд
    - cleanup   # удаление директории проекта для экономии места

variables: 
    SERVICE_DIR: /opt/ups
    SERVICE_NAME: ups
build:
    stage: build
    tags:
        - docker
    before_script:
        - apt update -y
        - apt install -y git
        - mkdir branch_test
        - cd branch_test
        - git clone http://techuser:1234567890test@10.2.0.188:7080/installers/ups.git -b test
        - cd ..
        - mv branch_test/ups/$SERVICE_NAME-*-universal.sh ./
        - current_version=$(ls *.tar.gz | cut -d '-' -f 2)
        - mv $SERVICE_NAME-*-universal.sh $SERVICE_NAME-${current_version%%.tar.gz}-universal.sh
    script:
        - ./$SERVICE_NAME-*-universal.sh -p $SERVICE_NAME-*.tar.gz
        - ./$SERVICE_NAME-*-universal.sh -p $SERVICE_NAME-*.tar.gz # повторный запсук из за костыля с именем файла в инсталлере
    artifacts: 
        paths:
            - $SERVICE_NAME-*-universal.sh
        expire_in: 1 hour
    only:
        - master
    except:
        variables:
            - $CI_COMMIT_MESSAGE =~ /skip-pipeline/
################################## развертывание сервиса на 10.2.0.202 и 10.2.0.190. Разворачиваются парралельно сразу после выполнения этапа build
install_202:
    stage: install
    tags:
        - "202"
    script:
        - sudo systemctl is-active $SERVICE_NAME && sudo systemctl stop $SERVICE_NAME 2>/dev/null
        - sudo ./$SERVICE_NAME-*-universal.sh -i -on
        - sudo systemctl start $SERVICE_NAME 2>/dev/null
        - sudo systemctl enable $SERVICE_NAME 2>/dev/null
        - msg=$(echo -e "<b>--------------------------------</b>\n<b>Сервис $SERVICE_NAME был успешно обновлён на на стенде `hostname`</b>\n<b>--------------------------------</b>")
        - /usr/bin/curl --silent --data chat_id="-1001669151578" --data-urlencode "text=${msg}" "https://api.telegram.org/bot5186207563:AAHtoAx4bi8C6FNmOr-bHy1tBVpiBdio4dk/sendMessage?parse_mode=HTML" >/dev/null 2>&1
    needs: ["build"]
    only:
        - master
    except:
        variables:
            - $CI_COMMIT_MESSAGE =~ /skip-pipeline/
            - $CI_COMMIT_MESSAGE =~ /except_202/

install_190:
    stage: install
    tags:
        - "190"
    script:
        - sudo systemctl is-active $SERVICE_NAME && sudo systemctl stop $SERVICE_NAME 2>/dev/null
        - sudo ./$SERVICE_NAME-*-universal.sh -i -on
        - sudo systemctl start $SERVICE_NAME 2>/dev/null
        - sudo systemctl enable $SERVICE_NAME 2>/dev/null
        - msg=$(echo -e "<b>--------------------------------</b>\n<b>Сервис $SERVICE_NAME был успешно обновлён на на стенде `hostname`</b>\n<b>--------------------------------</b>")
        - /usr/bin/curl --silent --data chat_id="-1001630087101" --data-urlencode "text=${msg}" "https://api.telegram.org/bot5919117739:AAEE44LXoWDuTy8L_ZdgIt95D_-HhOOJ3VU/sendMessage?parse_mode=HTML" >/dev/null 2>&1
    needs: ["build"]
    only:
        - master
    artifacts: 
        paths:
            - $SERVICE_NAME-*-universal.sh
        expire_in: 1 hour
    except:
        variables:
            - $CI_COMMIT_MESSAGE =~ /skip-pipeline/
            - $CI_COMMIT_MESSAGE =~ /except_190/


###################################### очистка директории от файлов ######################################################
clean_202:
    stage: cleanup
    tags:
        - "202"
    script:
       - echo "Time to clean up"
    after_script:
       - rm -rf $CI_PROJECT_DIR
    needs: ["install_202"]
    only:
        - master
    except:
        variables:
            - $CI_COMMIT_MESSAGE =~ /skip-pipeline/
            - $CI_COMMIT_MESSAGE =~ /except_202/



clean_190:
    stage: cleanup
    tags:
        - "190"
    script:
       - echo "Time to clean up"
    after_script:
       - rm -rf $CI_PROJECT_DIR
    needs: ["test_ups"]
    only:
        - master
    except:
        variables:
            - $CI_COMMIT_MESSAGE =~ /skip-pipeline/
            - $CI_COMMIT_MESSAGE =~ /except_190/
            - $CI_COMMIT_MESSAGE =~ /release/

###################################### запуск питоновского скрипта авто-тестирования ######################################################
test_ups:
    stage: test
    tags:
        - "190"
    script:
       - sudo python3 test_ups.py
    needs: ["install_190"]
    artifacts: 
        paths:
            - $SERVICE_NAME-*-universal.sh
        expire_in: 15 minutes
    only:
        - master
    except:
        variables:
            - $CI_COMMIT_MESSAGE =~ /skip-pipeline/
            - $CI_COMMIT_MESSAGE =~ /except_190/

######################################  при успешных тестах выкладываем инсталятор на некстклауд ######################################################
deploy_installer:
    stage: deploy
    tags:
        - "190"
    script:
        - sudo scp $SERVICE_NAME-*-universal.sh root@$STORAGE_SERVER:$STORAGE_DIR
        - sudo ssh root@$STORAGE_SERVER 'if [ $(ls -l $STORAGE_DIR |wc -l) -gt 10 ]; then rm -rf $STORAGE_DIR$(ls -1rt $STORAGE_DIR | head -1); fi'
        - name=$(ls $SERVICE_NAME-*-universal.sh)
        - msg=$(echo -e "<b>Доступна новая стабильная версия сервиса $SERVICE_NAME</b>\n<b>--------------------------------</b>\n<b>Инсталлятор $name  загружен в хранилище и доступен по ссылке</b>\nhttps://cloud.connect2ai.net/index.php/apps/files/?dir=/$SERVICE_NAME/3.0\n<b>--------------------------------</b>")
        - /usr/bin/curl --silent --data chat_id="-1001630087101" --data-urlencode "text=${msg}" "https://api.telegram.org/bot5919117739:AAEE44LXoWDuTy8L_ZdgIt95D_-HhOOJ3VU/sendMessage?parse_mode=HTML" >/dev/null 2>&1
    needs: ["test_ups"]
    only:
        variables:
            - $CI_COMMIT_MESSAGE =~ /release/

###################################### очистка директории от файлов ######################################################  
clean_190_after_deploy:
    stage: cleanup
    tags:
        - "190"
    script:
       - echo "Time to clean up"
    after_script:
       - rm -rf $CI_PROJECT_DIR
    needs: ["deploy_installer"]
    only:
        variables:
            - $CI_COMMIT_MESSAGE =~ /release/


###################################### оповестим в чат если пайплайн сломался ######################################################  
alarm_all:
    stage: cleanup
    tags:
        - "190"
    when: on_failure
    script:
        - msg=$(echo -e "<b>--------------------------------</b>\n<b>Пайплайн для  $SERVICE_NAME упал. Посмотрите на него, пожалуйста.</b>\n<b>--------------------------------</b>")
        - /usr/bin/curl --silent --data chat_id="-1001630087101" --data-urlencode "text=${msg}" "https://api.telegram.org/bot5919117739:AAEE44LXoWDuTy8L_ZdgIt95D_-HhOOJ3VU/sendMessage?parse_mode=HTML" >/dev/null 2>&1